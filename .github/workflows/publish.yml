# GH workflow to build and publish cargo-nextest release for OpenBSD-stable
name: Build and Publish

env:
  # cargo-nextest version to build
  NEXTEST_VERSION: "0.9.66"

on:
  # To run manually workflow
  workflow_dispatch:
  # Run with new tag
  # push:
  #   tags:        
  #     - "*.*.*"

permissions:
  contents: write

jobs:
  build:
    name: Build cargo-nextest
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
    # Set NEXTEST_VERSION in env
    # - name: Set NEXT_VERSION env
    #   run: echo "NEXTEST_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
    # Checkout only build script
    - name: Checkout build script
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          build.sh
        sparse-checkout-cone-mode: false
    # Prepare OpenBSD-stable VM and run build
    - name: Prepare OpenBSD VM and build
      uses: vmactions/openbsd-vm@v1.0.6
      with:
        usesh: true
        sync: rsync
        copyback: true
        # Install requirements to build cargo-nextest with Rust v1.72.1
        prepare: |
          pkg_add -I bash curl git
          pkg_add -I rust zstd
        run: |
          ## Prepare, build, and test
          # implementation modelled after ref: <https://github.com/rust-lang/rustup/pull/2783>
          # * NOTE: All steps need to be run in this block, otherwise, we are operating back on the Ubuntu host
          set -e
          #
          REPO_NAME=${GITHUB_WORKSPACE##*/}
          WORKSPACE_PARENT="/home/runner/work/${REPO_NAME}"
          WORKSPACE="${WORKSPACE_PARENT}/${REPO_NAME}"
          echo "## whoami"
          whoami
          # Increase the number of file descriptors - See https://github.com/rust-lang/cargo/issues/11435
          ulimit -n 1024
          
          ## Info
          # environment
          echo "## environment"
          echo "CI='${CI}'"
          echo "REPO_NAME='${REPO_NAME}'"
          echo "WORKSPACE_PARENT='${WORKSPACE_PARENT}'"
          echo "WORKSPACE='${WORKSPACE}'"
          echo "NEXTEST_VERSION='${{ env.NEXTEST_VERSION }}'"
          env | sort

          # tooling info
          echo "## tooling infos"
          cargo -V
          rustc -V
          
          ## Run build script for cargo-nextest
          echo "##################################"
          echo "Run build script for cargo-nextest"
          echo "##################################"
          cd "${WORKSPACE}"
          export CARGO_TERM_COLOR=always
          ./build.sh "${{ env.NEXTEST_VERSION }}"
          echo "# ls -l /tmp/cargo-nextest-build-${{ env.NEXTEST_VERSION }}/target/release"
          ls -l /tmp/cargo-nextest-build-${{ env.NEXTEST_VERSION }}/target/release
          echo "# /tmp/cargo-nextest-build-${{ env.NEXTEST_VERSION }}/target/release/cargo-nextest -V"
          /tmp/cargo-nextest-build-${{ env.NEXTEST_VERSION }}/target/release/cargo-nextest -V
          
          ## Copy cargo-nextest binary to GITHUB_WORKSPACE => copy back to Ubuntu host
          echo "# Copy cargo-nextest-${{ env.NEXTEST_VERSION }} to working directory"
          cp -v /tmp/cargo-nextest-build-${{ env.NEXTEST_VERSION }}/target/release/cargo-nextest ${GITHUB_WORKSPACE}
    # Run commands on Ubuntu host
    - name: Check artifact on Ubuntu runner
      run: |
        sudo apt-get install -y file
        echo "# pwd"
        pwd
        echo "# ls -l"
        ls -l
        echo "# Check cargo-nextest file"
        file cargo-nextest
    # TODO: upload artifact

    # TODO: job "publish" => download artifact
    # Create .tar.gz archive for release
    - name: Create archive for release
      run: tar cvzf cargo-nextest-${{ env.NEXTEST_VERSION }}-openbsd.tar.gz cargo-nextest
    # Publish new release
    - name: Publish release
      uses: softprops/action-gh-release@v1
      with:
        name: cargo-nextest-openbsd ${{ env.NEXTEST_VERSION }} 
        body: "Release for cargo-nextest ${{ env.NEXTEST_VERSION }} - See https://github.com/nextest-rs/nextest/releases/tag/cargo-nextest-${{ env.NEXTEST_VERSION }}"
        draft: true
        fail_on_unmatched_files: true
        files: cargo-nextest-${{ env.NEXTEST_VERSION }}-openbsd.tar.gz



