name: Manual Build

env:
  # cargo-nextest version to build
  NEXTEST_VERSION: "0.9.67"

on:
  # To run manually workflow
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build cargo-nextest
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
    # Checkout only build script and script for CI
    - name: Checkout build script
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          build.sh
          ci/openbsd_build.sh

    # Prepare OpenBSD-stable VM and run build
    - name: Prepare OpenBSD VM and build
      uses: vmactions/openbsd-vm@v1.0.6
      with:
        usesh: true
        sync: rsync
        copyback: true
        envs: 'NEXTEST_VERSION'
        # Install requirements to build cargo-nextest with Rust v1.72.1
        prepare: |
          pkg_add -I bash curl git
          pkg_add -I rust zstd
        # implementation modelled from https://github.com/rust-lang/rustup/blob/master/.github/workflows/ci.yaml
        # * NOTE: All steps need to be run in this block, otherwise, we are operating back on the Ubuntu host
        run: bash ci/openbsd_build.sh

    # Run commands on Ubuntu host
    - name: Check artifact on Ubuntu runner
      run: |
        sudo apt-get install -y file
        echo "# pwd"
        pwd
        echo "# ls -l cargo-nextest-build/target/release/cargo-nextest"
        ls -l cargo-nextest-build/target/release/cargo-nextest
        echo "# Check cargo-nextest file"
        file cargo-nextest-build/target/release/cargo-nextest

    # Upload artifact for cargo-nextest binary
    - name: Upload cargo-nextest binary
      uses: actions/upload-artifact@v4
      with:
        name: cargo-nextest-${{ env.NEXTEST_VERSION }}-openbsd
        # Wildcard used to flatten directory hierarchy
        path: cargo-nextest-build/target/release/*-nextest
        if-no-files-found: error
        retention-days: 0
